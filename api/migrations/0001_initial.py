# Generated by Django 5.0.7 on 2024-07-22 20:43

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('fullname', models.CharField(max_length=100, verbose_name='Full name')),
                ('email', models.EmailField(max_length=100, unique=True, verbose_name='Email Address')),
                ('custom_instruction', models.CharField(blank=True, max_length=100, null=True, verbose_name='Custom Instruction')),
                ('phone_number', models.IntegerField(blank=True, null=True, verbose_name='Phone Number')),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_superuser', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Chats',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('role', models.CharField(choices=[('User', 'User'), ('Assistant', 'Assistant')], max_length=50, verbose_name='Role')),
                ('output', models.TextField(max_length=500, verbose_name='Output')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Favorites',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50, verbose_name='Name')),
                ('description', models.TextField(max_length=150, verbose_name='Description')),
                ('eligibility', models.TextField(blank=True, max_length=150, null=True, verbose_name='Eligbility')),
                ('value', models.CharField(blank=True, max_length=100, null=True, verbose_name='Value')),
                ('fields', models.CharField(blank=True, max_length=100, null=True, verbose_name='Fields')),
                ('deadline', models.CharField(max_length=100, verbose_name='Deadline')),
                ('website', models.CharField(max_length=100, verbose_name='Website')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('value', models.BooleanField(verbose_name='Like or Dislike')),
                ('comment', models.TextField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('chat_id', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='api.chats')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Threads',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=150, verbose_name='Title')),
                ('metadata', models.JSONField(blank=True, max_length=200, null=True, verbose_name='Metadata')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='chats',
            name='thread_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.threads'),
        ),
        migrations.CreateModel(
            name='TrackScholarships',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('track', models.BooleanField(default=False)),
                ('remind_me', models.CharField(choices=[('Two times before deadline', 'Two times before deadline'), ('Three times before deadline', 'Three times before deadline')], max_length=50, verbose_name='Reminder options')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('favorite_id', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='api.favorites')),
            ],
        ),
    ]
